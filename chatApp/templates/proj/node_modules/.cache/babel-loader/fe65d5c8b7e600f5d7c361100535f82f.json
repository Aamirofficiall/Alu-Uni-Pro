{"ast":null,"code":"import axios from\"axios\";import*as actionTypes from\"./actionTypes\";export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(username,token){return{type:actionTypes.AUTH_SUCCESS,token:token,username:username};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem(\"token\");localStorage.removeItem(\"username\");localStorage.removeItem(\"expirationDate\");localStorage.clear();return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());console.log(username,password);// axios\n//   .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n//     username: username,\n//     password: password\n//   })\nfetch('http://127.0.0.1:8000/rest-auth/login',{method:'post',headers:{'Content-Type':'application/json'},body:{username:username,password:password}}).then(function(res){var token=res.data.key;console.log(token);var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"username\",username);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(username,token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));console.log('it has jusst causeed erroooo');});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\",{username:username,email:email,password1:password1,password2:password2}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"username\",username);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(username,token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem(\"token\");var username=localStorage.getItem(\"username\");if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem(\"expirationDate\"));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(username,token));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["E:/Programming/Django/Django-Learning-Metrials/Django Chat App Complete/another template for deploying react app on django/DemoProj/proj/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","username","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","clear","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","console","log","fetch","method","headers","body","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","post","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (username, token) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    username: username\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.clear();\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    console.log(username,password)\r\n    // axios\r\n    //   .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\r\n    //     username: username,\r\n    //     password: password\r\n    //   })\r\n    fetch('http://127.0.0.1:8000/rest-auth/login', {\r\n      method: 'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: {\r\n        username: username,\r\n        password: password\r\n      }\r\n     })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        console.log(token)\r\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(username, token));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n        console.log('it has jusst causeed erroooo')\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\r\n        username: username,\r\n        email: email,\r\n        password1: password1,\r\n        password2: password2\r\n      })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(username, token));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"username\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(username, token));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}